{"version":3,"sources":["Components/PeopleList.js","Components/Loading.js","App.js","reportWebVitals.js","index.js"],"names":["PeopleList","props","people","length","List","className","map","person","Typography","style","color","variant","name","src","avatar","alt","ListItem","age","interests","address","Loading","Component","isLoading","CircularProgress","textAlign","fontSize","App","ListLoading","useState","loading","repos","appState","setAppState","useEffect","fetch","then","x","Promise","resolve","setTimeout","res","json","returnedFunction","func","timeout","args","later","clearTimeout","debounce","e","searchUrl","target","value","console","log","TextField","label","onChange","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b093346.chunk.js","sourcesContent":["import React from \"react\";\nimport List from \"@material-ui/core/list\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\n\nconst PeopleList = (props) => {\n  const { people } = props;\n  if (!people || people.length === 0) return <p>\"Sorry, no peeps\"</p>;\n  return (\n    <List className=\"grid space-around\">\n      {people.map((person) => {\n        return (\n          <li key={person.name} className=\"repo bg-light\">\n            <Typography style={{color: '#0B521C'}} variant=\"h6\">{person.name}</Typography>\n\n            <img\n              className=\"avatar\"\n              src={person.avatar}\n              alt={`avatar for ${person.name}`}\n            />\n            <List className=\"card-list\">\n              <ListItem variant=\"subtitle2\">Age: {person.age}</ListItem>\n              <ListItem>Interests: {person.interests}</ListItem>\n              <ListItem>Address: {person.address}</ListItem>\n            </List>\n          </li>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default PeopleList;\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nfunction Loading(Component) {\n  return function LoadingComponent({ isLoading, ...props }) {\n    if (!isLoading) return <Component {...props} />;\n    return (\n      <>\n        <CircularProgress />\n        <p style={{ textAlign: \"center\", fontSize: \"30px\" }}>\n          Finding a person takes exactly 1 second!\n        </p>\n      </>\n    );\n  };\n}\n\nexport default Loading;\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport PeopleList from \"./Components/PeopleList\";\nimport Loading from \"./Components/Loading\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nfunction App() {\n  const ListLoading = Loading(PeopleList);\n  const [appState, setAppState] = useState({\n    loading: false,\n    repos: null,\n  });\n\n  useEffect(() => {\n    setAppState({ loading: true });\n    const apiUrl = \"/api/people/\";\n    fetch(apiUrl)\n      .then((x) => new Promise((resolve) => setTimeout(() => resolve(x), 1500)))\n      .then((res) => res.json())\n      .then((people) => {\n        setAppState({ loading: false, people: people });\n      });\n  }, [setAppState]);\n\n  // No Debounce\n  // function onUpdateSearch(e) {\n  //   setAppState({ loading: true });\n  //   const searchUrl = `/api/people/${e.target.value}`;\n  //   console.log(searchUrl)\n  //   fetch(searchUrl)\n  //     // .then((x) => new Promise((resolve) => setTimeout(() => resolve(x), 1000)))\n  //     .then((res) => res.json())\n  //     .then((people) => {\n  //       setAppState({ loading: false, people: people });\n  //     });\n  // }\n\n  // Debounce function\n  const debounce = (func) => {\n    let timeout;\n\n    return function executedFunction(...args) {\n      const later = () => {\n        clearTimeout(timeout);\n        func(...args);\n      };\n\n      clearTimeout(timeout);\n      timeout = setTimeout(later, 1000);\n    };\n  };\n\n  let returnedFunction = debounce(function (e) {\n    setAppState({ loading: true });\n    const searchUrl = `/api/people/${e.target.value}`;\n    console.log(searchUrl);\n    fetch(searchUrl)\n      .then((x) => new Promise((resolve) => setTimeout(() => resolve(x), 1000)))\n      .then((res) => res.json())\n      .then((people) => {\n        setAppState({ loading: false, people: people });\n      });\n  });\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Typography variant=\"h2\">My People</Typography>\n      </div>\n      <TextField label=\"Search\" onChange={returnedFunction}></TextField>\n      <div className=\"people-container\">\n        {appState.loading ? (\n          <>\n            <CircularProgress style={{ margin: \"50px\" }} />\n            <Typography>Loading delayed by 1 second</Typography>\n          </>\n        ) : (\n          <ListLoading isLoading={appState.loading} people={appState.people} />\n        )}\n        {/* <ListLoading isLoading={appState.loading} people={appState.people} /> */}\n      </div>\n    </div>\n  );\n}\nexport default App;\n\n// class App extends Component {\n//   componentDidMount() {\n//     fetch('/api/people')\n//       .then((res) => res.json())\n//       .then((people) => console.log(people));\n//   }\n//   render() {\n//     return (\n//       <div className='App'>\n//         <h1>Peeple</h1>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}